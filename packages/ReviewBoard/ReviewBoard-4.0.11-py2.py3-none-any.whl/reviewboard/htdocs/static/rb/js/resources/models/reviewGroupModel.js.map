{"version":3,"file":"reviewGroupModel.js","names":["GroupMember","RB","BaseResource","extend","defaults","_","username","added","loaded","prototype","serializedAttrs","url","get","isNew","parse","ReviewGroup","name","rspNamespace","SITE_ROOT","setStarred","starred","options","context","watched","UserSession","instance","watchedGroups","addImmediately","removeImmediately","addUser","member","baseURL","save","isFunction","error","call","errorText","removeUser","destroy"],"sources":["reviewGroupModel.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * A member of a review group.\n *\n * This is used to handle adding a user to a group or removing from a group.\n */\nconst GroupMember = RB.BaseResource.extend({\n    defaults() {\n        return _.defaults({\n            username: null,\n            added: false,\n            loaded: true\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    serializedAttrs: ['username'],\n\n    /**\n     * Return a URL for this resource.\n     *\n     * If this represents an added user, the URL will point to\n     * <groupname>/<username>/. Otherwise, it just points to <groupname>/.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when syncing the model.\n     */\n    url() {\n        let url = this.get('baseURL');\n\n        if (this.get('added')) {\n            url += this.get('username') + '/';\n        }\n\n        return url;\n    },\n\n    /**\n     * Return whether the group membership is \"new\".\n     *\n     * A non-added user is new, meaning the save operation will trigger\n     * a POST to add the user.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether this member is newly-added to the group.\n     */\n    isNew() {\n        return !this.get('added');\n    },\n\n    /**\n     * Parse the result payload.\n     *\n     * We don't really care about the result, so we don't bother doing any\n     * work to parse.\n     */\n    parse() {}\n});\n\n\n/**\n * A review group.\n *\n * This provides some utility functions for working with an existing\n * review group.\n *\n * At the moment, this consists of marking a review group as\n * starred/unstarred.\n */\nRB.ReviewGroup = RB.BaseResource.extend({\n    defaults() {\n        return _.defaults({\n            name: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'group',\n\n    /**\n     * Return the URL to the review group.\n     *\n     * If this is a new group, the URL will point to the base groups/ URL.\n     * Otherwise, it points to the URL for the group itself.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when syncing the model.\n     */\n    url() {\n        let url = SITE_ROOT + (this.get('localSitePrefix') || '') +\n                  'api/groups/';\n\n        if (!this.isNew()) {\n            url += this.get('name') + '/';\n        }\n\n        return url;\n    },\n\n    /**\n     * Mark a review group as starred or unstarred.\n     *\n     * Args:\n     *     starred (boolean):\n     *         Whether or not the group is starred.\n     *\n     *     options (object):\n     *         Additional options for the save operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    setStarred(starred, options, context) {\n        const watched = RB.UserSession.instance.watchedGroups;\n\n        if (starred) {\n            watched.addImmediately(this, options, context);\n        } else {\n            watched.removeImmediately(this, options, context);\n        }\n    },\n\n    /**\n     * Add a user to this group.\n     *\n     * Sends the request to the server to add the user, and notifies on\n     * succes or failure.\n     *\n     * Args:\n     *     username (string):\n     *         The username of the new user.\n     *\n     *     options (object):\n     *         Additional options for the save operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    addUser(username, options, context) {\n        const url = this.url() + 'users/';\n\n        if (url && !this.isNew()) {\n            const member = new GroupMember({\n                username: username,\n                baseURL: url\n            });\n\n            member.save(options, context);\n        } else if (options && _.isFunction(options.error)) {\n            options.error.call({\n                errorText: 'Unable to add to the group.'\n            });\n        }\n    },\n\n    /*\n     * Remove a user from this group.\n     *\n     * Sends the request to the server to remove the user, and notifies on\n     * succes or failure.\n     *\n     * Args:\n     *     username (string):\n     *         The username of the new user.\n     *\n     *     options (object):\n     *         Additional options for the save operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    removeUser(username, options, context) {\n        const url = this.url() + 'users/';\n\n        if (url && !this.isNew()) {\n            const member = new GroupMember({\n                username: username,\n                baseURL: url,\n                added: true\n            });\n\n            member.destroy(options, context);\n        } else if (options && _.isFunction(options.error)) {\n            options.error.call({\n                errorText: 'Unable to remove from the group.'\n            });\n        }\n    }\n});\n\n\n})();\n"],"mappings":"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"}