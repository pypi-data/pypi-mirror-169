{"version":3,"file":"baseResourceModel.js","names":["RB","BaseResource","Backbone","Model","extend","defaults","extraData","links","loaded","parentObject","rspNamespace","urlIDAttr","listKey","expandedFields","extraQueryArgs","supportsExtraData","attrToJsonMap","serializedAttrs","deserializedAttrs","serializers","deserializers","initialize","_setupExtraData","url","get","self","href","key","_","result","link","baseURL","isNew","ready","options","context","undefined","success","isFunction","bind","error","fetch","data","ensureCreated","save","call","bindCallbacks","prototype","trigger","_saveObject","saveOptions","args","apply","attrs","toJSON","files","readers","form","payloadFileKeys","window","File","forEach","file","push","length","reader","FileReader","onloadend","every","r","readyState","DONE","_saveWithFiles","readAsArrayBuffer","fileReaders","boundary","Date","getTime","blob","zip","name","type","value","Object","entries","includes","Blob","processData","contentType","destroy","_destroyObject","_finishDestroy","wait","set","id","parse","rsp","console","assert","stat","extra_data","parseResourceData","attrName","deserializer","jsonField","serializerState","serializer","sync","method","model","isEmpty","isArray","pick","map","attr","syncOptions","expand","join","xhr","storeAPIError","errorPayload","has","validate","strings","isObject","INVALID_EXTRADATA_TYPE","isNull","isNumber","isNaN","isBoolean","isString","INVALID_EXTRADATA_VALUE_TYPE","replace","UNSET_PARENT_OBJECT","ExtraDataMixin"],"sources":["baseResourceModel.es6.js"],"sourcesContent":["/**\n * The base model for all API-backed resource models.\n *\n * This provides a common set of attributes and functionality for working\n * with Review Board's REST API. That includes fetching data for a known\n * resource, creating resources, saving, deleting, and navigating children\n * resources by way of a payload's list of links.\n *\n * Other resource models are expected to extend this. In particular, they\n * should generally be extending toJSON() and parse().\n */\nRB.BaseResource = Backbone.Model.extend({\n    /**\n     * Return default values for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The attribute defaults.\n     */\n    defaults() {\n        return {\n            extraData: {},\n            links: null,\n            loaded: false,\n            parentObject: null\n        };\n    },\n\n    /** The key for the namespace for the object's payload in a response. */\n    rspNamespace: '',\n\n    /** The attribute used for the ID in the URL. */\n    urlIDAttr: 'id',\n\n    listKey() {\n        return this.rspNamespace + 's';\n    },\n\n    /** The list of fields to expand in resource payloads. */\n    expandedFields: [],\n\n    /**\n     * Extra query arguments for GET requests.\n     *\n     * This may also be a function that returns the extra query arguments.\n     *\n     * These values can be overridden by the caller when making a request.\n     * They function as defaults for the queries.\n     */\n    extraQueryArgs: {},\n\n    /** Whether or not extra data can be associated on the resource. */\n    supportsExtraData: false,\n\n    /**\n     * A map of attribute names to resulting JSON field names.\n     *\n     * This is used to auto-generate a JSON payload from attribute names\n     * in toJSON().\n     *\n     * It's also needed if using attribute names in any save({attrs: [...]})\n     * calls.\n     */\n    attrToJsonMap: {},\n\n    /** A list of attributes to serialize in toJSON(). */\n    serializedAttrs: [],\n\n    /** A list of attributes to deserialize in parseResourceData(). */\n    deserializedAttrs: [],\n\n    /** Special serializer functions called in toJSON(). */\n    serializers: {},\n\n    /** Special deserializer functions called in parseResourceData(). */\n    deserializers: {},\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        if (this.supportsExtraData) {\n            this._setupExtraData();\n        }\n    },\n\n    /**\n     * Return the URL for this resource's instance.\n     *\n     * If this resource is loaded and has a URL to itself, that URL will\n     * be returned. If not yet loaded, it'll try to get it from its parent\n     * object, if any.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when fetching the resource. If the URL cannot be\n     *     determined, this will return null.\n     */\n    url() {\n        let links = this.get('links');\n\n        if (links) {\n            return links.self.href;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            links = parentObject.get('links');\n\n            if (links) {\n                const key = _.result(this, 'listKey');\n                const link = links[key];\n\n                if (link) {\n                    const baseURL = link.href;\n\n                    return this.isNew()\n                           ? baseURL\n                           : (baseURL + this.get(this.urlIDAttr) + '/');\n                }\n            }\n        }\n\n        return null;\n    },\n\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * An object is ready it has an ID and is loaded, or is a new resource.\n     *\n     * When the object is ready, options.ready() will be called. This may\n     * be called immediately, or after one or more round trips to the server.\n     *\n     * If we fail to load the resource, objects.error() will be called instead.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the fetch operation.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     *\n     * Option Args:\n     *     ready (function):\n     *         Callback function for when the object is ready to use.\n     *\n     *     error (function):\n     *         Callback function for when an error occurs.\n     */\n    ready(options={}, context=undefined) {\n        const success = _.isFunction(options.ready)\n                        ? _.bind(options.ready, context)\n                        : undefined;\n        const error = _.isFunction(options.error)\n                      ? _.bind(options.error, context)\n                      : undefined;\n\n        const parentObject = this.get('parentObject');\n\n        if (this.get('loaded')) {\n            // We already have data--just call the callbacks\n            if (success) {\n                success();\n            }\n        } else if (!this.isNew()) {\n            // Fetch data from the server\n            this.fetch({\n                data: options.data,\n                success: success,\n                error: error\n            });\n        } else if (parentObject) {\n            /*\n             * This is a new object, which means there's nothing to fetch from\n             * the server, but we still need to ensure that the parent is loaded\n             * in order for it to have valid links.\n             */\n            parentObject.ready({\n                ready: success,\n                error: error\n            });\n        } else if (success) {\n            // Fallback for dummy objects.\n            success();\n        }\n    },\n\n    /**\n     * Call a function when we know an object exists server-side.\n     *\n     * This works like ready() in that it's used to delay operating on the\n     * resource until we have a server-side representation. Unlike ready(),\n     * it will attempt to create it if it doesn't exist first.\n     *\n     * When the object has been created, or we know it already is,\n     * options.success() will be called.\n     *\n     * If we fail to create the object, options.error() will be called\n     * instead.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    ensureCreated(options={}, context=undefined) {\n        this.ready({\n            ready: () => {\n                if (!this.get('loaded')) {\n                    this.save({\n                        success: _.isFunction(options.success)\n                                 ? _.bind(options.success, context)\n                                 : undefined,\n                        error: _.isFunction(options.error)\n                               ? _.bind(options.error, context)\n                               : undefined\n                    });\n                } else if (_.isFunction(options.success)) {\n                    options.success.call(context);\n                }\n            }\n        });\n    },\n\n    /**\n     * Fetch the object's data from the server.\n     *\n     * An object must have an ID before it can be fetched. Otherwise,\n     * options.error() will be called.\n     *\n     * If this has a parent resource object, we'll ensure that's ready before\n     * fetching this resource.\n     *\n     * The resource must override the parse() function to determine how\n     * the returned resource data is parsed and what data is stored in\n     * this object.\n     *\n     * If we successfully fetch the resource, options.success() will be\n     * called.\n     *\n     * If we fail to fetch the resource, options.error() will be called.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    fetch(options={}, context=undefined) {\n        options = _.bindCallbacks(options, context);\n\n        if (this.isNew()) {\n            if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'fetch cannot be used on a resource without an ID');\n            }\n\n            return;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            parentObject.ready({\n                ready: () => Backbone.Model.prototype.fetch.call(this, options),\n                error: options.error\n            }, this);\n        } else {\n            Backbone.Model.prototype.fetch.call(this, options);\n        }\n    },\n\n    /**\n     * Save the object's data to the server.\n     *\n     * If the object has an ID already, it will be saved to its known\n     * URL using HTTP PUT. If it doesn't have an ID, it will be saved\n     * to its parent list resource using HTTP POST\n     *\n     * If this has a parent resource object, we'll ensure that's created\n     * before saving this resource.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be saved.\n     *\n     * The resource must override the toJSON() function to determine what\n     * data is saved to the server.\n     *\n     * If we successfully save the resource, options.success() will be\n     * called, and the \"saved\" event will be triggered.\n     *\n     * If we fail to save the resource, options.error() will be called.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    save(options={}, context=undefined) {\n        this.trigger('saving', options);\n\n        this.ready({\n            ready: () => {\n                const parentObject = this.get('parentObject');\n\n                if (parentObject) {\n                    parentObject.ensureCreated({\n                        success: this._saveObject.bind(this, options, context),\n                        error: options.error\n                    }, this);\n                } else {\n                    this._saveObject(options, context);\n                }\n            },\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    /**\n     * Handle the actual saving of the object's state.\n     *\n     * This is called internally by save() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _saveObject(options, context) {\n        const url = _.result(this, 'url');\n        if (!url) {\n            if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be saved');\n            }\n\n            return;\n        }\n\n        const saveOptions = _.defaults({\n            success: (...args) => {\n                if (_.isFunction(options.success)) {\n                    options.success.apply(context, args);\n                }\n\n                this.trigger('saved', options);\n            },\n            error: (...args) => {\n                if (_.isFunction(options.error)) {\n                    options.error.apply(context, args);\n                }\n\n                this.trigger('saveFailed', options);\n            }\n        }, options);\n\n        saveOptions.attrs = options.attrs || this.toJSON(options);\n\n        const files = [];\n        const readers = [];\n\n        if (!options.form) {\n            if (this.payloadFileKeys && window.File) {\n                /* See if there are files in the attributes we're using. */\n                this.payloadFileKeys.forEach(key => {\n                    const file = saveOptions.attrs[key];\n\n                    if (file) {\n                        files.push(file);\n                    }\n                });\n            }\n        }\n\n        if (files.length > 0) {\n            files.forEach(file => {\n                const reader = new FileReader();\n\n                readers.push(reader);\n                reader.onloadend = () => {\n                    if (readers.every(r => r.readyState === FileReader.DONE)) {\n                        this._saveWithFiles(files, readers, saveOptions);\n                    }\n                };\n                reader.readAsArrayBuffer(file);\n            });\n        } else {\n            Backbone.Model.prototype.save.call(this, {}, saveOptions);\n        }\n    },\n\n    /**\n     * Save the model with a file upload.\n     *\n     * When doing file uploads, we need to hand-structure a form-data payload\n     * to the server. It will contain the file contents and the attributes\n     * we're saving. We can then call the standard save function with this\n     * payload as our data.\n     *\n     * Args:\n     *     files (Array of object):\n     *         A list of files, with ``name`` and ``type`` keys.\n     *\n     *     fileReaders (Array of FileReader):\n     *         Readers corresponding to each item in ``files``.\n     *\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Option Args:\n     *     boundary (string):\n     *         Optional MIME multipart boundary.\n     *\n     *     attrs (object):\n     *         Additional key/value pairs to include in the payload data.\n     */\n    _saveWithFiles(files, fileReaders, options) {\n        const boundary = options.boundary ||\n                         ('-----multipartformboundary' + new Date().getTime());\n        const blob = [];\n\n        for (let [key, file, reader] of\n             _.zip(this.payloadFileKeys, files, fileReaders)) {\n            if (!file || !reader) {\n                continue;\n            }\n\n            blob.push('--' + boundary + '\\r\\n');\n            blob.push('Content-Disposition: form-data; name=\"' +\n                      key + '\"; filename=\"' + file.name + '\"\\r\\n');\n            blob.push('Content-Type: ' + file.type + '\\r\\n');\n            blob.push('\\r\\n');\n\n            blob.push(reader.result);\n\n            blob.push('\\r\\n');\n        }\n\n        for (let [key, value] of Object.entries(options.attrs)) {\n            if (!this.payloadFileKeys.includes(key) &&\n                value !== undefined &&\n                value !== null) {\n                blob.push('--' + boundary + '\\r\\n');\n                blob.push('Content-Disposition: form-data; name=\"' + key +\n                          '\"\\r\\n');\n                blob.push('\\r\\n');\n                blob.push(value + '\\r\\n');\n            }\n        }\n\n        blob.push('--' + boundary + '--\\r\\n\\r\\n');\n\n        Backbone.Model.prototype.save.call(this, {}, _.extend({\n            data: new Blob(blob),\n            processData: false,\n            contentType: 'multipart/form-data; boundary=' + boundary,\n        }, options));\n    },\n\n    /**\n     * Delete the object's resource on the server.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be deleted.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    destroy(options={}, context=undefined) {\n        options = _.bindCallbacks(options, context);\n\n        this.trigger('destroying', options);\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.isNew() && parentObject) {\n            /*\n             * XXX This is temporary to support older-style resource\n             *     objects. We should just use ready() once we're moved\n             *     entirely onto BaseResource.\n             */\n            parentObject.ready(_.defaults({\n                ready: () => this._destroyObject(options, context)\n            }, options));\n        } else {\n            this._destroyObject(options, context);\n        }\n    },\n\n    /**\n     * Set up the deletion of the object.\n     *\n     * This is called internally by destroy() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Once we've done some work to ensure the URL is valid and the object\n     * is ready, we'll finish destruction by calling _finishDestroy.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _destroyObject(options={}, context=null) {\n        const url = _.result(this, 'url');\n\n        if (!url) {\n            if (this.isNew()) {\n                /*\n                 * If both this resource and its parent are new, it's possible\n                 * that we'll get through here without a url. In this case, all\n                 * the data is still local to the client and there's not much to\n                 * clean up; just call Model.destroy and be done with it.\n                 */\n                this._finishDestroy(options, context);\n            } else if (_.isFunction(options.error)) {\n                options.error.call(context,\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be deleted');\n            }\n\n            return;\n        }\n\n        this.ready({\n            ready: () => this._finishDestroy(options, context),\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    /**\n     * Finish destruction of the object.\n     *\n     * This will call the parent destroy method, then reset the state\n     * of the object on success.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     */\n    _finishDestroy(options, context) {\n        const parentObject = this.get('parentObject');\n\n        Backbone.Model.prototype.destroy.call(this, _.defaults({\n            wait: true,\n            success: (...args) => {\n                /*\n                 * Reset the object so it's new again, but with the same\n                 * parentObject.\n                 */\n                this.set(_.defaults(\n                    {\n                        id: null,\n                        parentObject: parentObject\n                    },\n                    _.result(this, 'defaults')));\n\n                this.trigger('destroyed', options);\n\n                if (_.isFunction(options.success)) {\n                    options.success.apply(context, args);\n                }\n            }\n        }, _.bindCallbacks(options, context)));\n    },\n\n    /**\n     * Parse and returns the payload from an API response.\n     *\n     * This will by default only return the object's ID and list of links.\n     * Subclasses should override this to return any additional data that's\n     * needed, but they must include the results of\n     * BaseResource.protoype.parse as well.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parse(rsp) {\n        console.assert(this.rspNamespace,\n                       'rspNamespace must be defined on the resource model');\n\n        if (rsp.stat !== undefined) {\n            /*\n             * This resource payload is inside an envelope from an API\n             * call. It's not model construction data or from a list\n             * resource.\n             */\n            rsp = rsp[this.rspNamespace];\n        }\n\n        return _.defaults({\n            extraData: rsp.extra_data,\n            id: rsp.id,\n            links: rsp.links,\n            loaded: true\n        }, this.parseResourceData(rsp));\n    },\n\n    /*\n     * Parse the resource data from a payload.\n     *\n     * By default, this will make use of attrToJsonMap and any\n     * jsonDeserializers to construct a resulting set of attributes.\n     *\n     * This can be overridden by subclasses.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parseResourceData(rsp) {\n        const attrs = {};\n\n        for (let attrName of this.deserializedAttrs) {\n            const deserializer = this.deserializers[attrName];\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            let value = rsp[jsonField];\n\n            if (deserializer) {\n                value = deserializer.call(this, value);\n            }\n\n            if (value !== undefined) {\n                attrs[attrName] = value;\n            }\n        }\n\n        return attrs;\n    },\n\n    /**\n     * Serialize and return object data for the purpose of saving.\n     *\n     * When saving to the server, the only data that will be sent in the\n     * API PUT/POST call will be the data returned from toJSON().\n     *\n     * This will build the list based on the serializedAttrs, serializers,\n     * and attrToJsonMap properties.\n     *\n     * Subclasses can override this to create custom serialization behavior.\n     *\n     * Returns:\n     *     object:\n     *     The serialized data.\n     */\n    toJSON() {\n        const serializerState = {\n            isNew: this.isNew(),\n            loaded: this.get('loaded')\n        };\n        const data = {};\n\n        for (let attrName of this.serializedAttrs) {\n            const serializer = this.serializers[attrName];\n            let value = this.get(attrName);\n\n            if (serializer) {\n                value = serializer.call(this, value, serializerState);\n            }\n\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            data[jsonField] = value;\n        }\n\n        if (this.supportsExtraData) {\n            _.extend(data, this.extraData.toJSON());\n        }\n\n        return data;\n    },\n\n    /**\n     * Handle all AJAX communication for the model and its subclasses.\n     *\n     * Backbone.js will internally call the model's sync function to\n     * communicate with the server, which usually uses Backbone.sync.\n     *\n     * We wrap this to convert the data to encoded form data (instead\n     * of Backbone's default JSON payload).\n     *\n     * We also parse the error response from Review Board so we can provide\n     * a more meaningful error callback.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (Backbone.Model):\n     *         The model to sync.\n     *\n     *     options (object):\n     *         Options for the operation.\n     *\n     * Option Args:\n     *     data (object):\n     *         Optional payload data to include.\n     *\n     *     form (jQuery):\n     *         Optional form to be submitted.\n     *\n     *     attrs (Array or object):\n     *         Either a list of the model attributes to sync, or a set of\n     *         key/value pairs to use instead of the model attributes.\n     */\n    sync(method, model, options={}) {\n        let data;\n        let contentType;\n\n        if (method === 'read') {\n            data = options.data || {};\n\n            const extraQueryArgs = _.result(this, 'extraQueryArgs', {});\n\n            if (!_.isEmpty(extraQueryArgs)) {\n                data = _.extend({}, extraQueryArgs, data);\n            }\n        } else {\n            if (options.form) {\n                data = null;\n            } else if (options.attrs && !_.isArray(options.attrs)) {\n                data = options.attrs;\n            } else {\n                data = model.toJSON(options);\n\n                if (options.attrs) {\n                    data = _.pick(\n                        data,\n                        options.attrs.map(attr => this.attrToJsonMap[attr]\n                                                  || attr));\n                }\n            }\n\n            contentType = 'application/x-www-form-urlencoded';\n        }\n\n        const syncOptions = _.defaults({}, options, {\n            /* Use form data instead of a JSON payload. */\n            contentType: contentType,\n            data: data,\n            processData: true\n        });\n\n        if (!options.form && this.expandedFields.length > 0) {\n            syncOptions.data.expand = this.expandedFields.join(',');\n        }\n\n        syncOptions.error = xhr => {\n            RB.storeAPIError(xhr);\n\n            const rsp = xhr.errorPayload;\n\n            if (rsp && _.has(rsp, this.rspNamespace)) {\n                /*\n                 * The response contains the current version of the object,\n                 * which we want to preserve, in case it did any partial\n                 * updating of data.\n                 */\n                this.set(this.parse(rsp));\n            }\n\n            if (_.isFunction(options.error)) {\n                options.error(xhr);\n            }\n        };\n\n        return Backbone.sync.call(this, method, model, syncOptions);\n    },\n\n    /**\n     * Perform validation on the attributes of the resource.\n     *\n     * By default, this validates the extraData field, if provided.\n     *\n     * Args:\n     *     attrs (object):\n     *         The attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string or ``undefined``.\n     */\n    validate(attrs) {\n        if (this.supportsExtraData && attrs.extraData !== undefined) {\n            const strings = RB.BaseResource.strings;\n\n            if (!_.isObject(attrs.extraData)) {\n                return strings.INVALID_EXTRADATA_TYPE;\n            }\n\n            for (let [key, value] of Object.entries(attrs.extraData)) {\n                if (!_.isNull(value) &&\n                    (!_.isNumber(value) || _.isNaN(value)) &&\n                    !_.isBoolean(value) &&\n                    !_.isString(value)) {\n                    return strings.INVALID_EXTRADATA_VALUE_TYPE\n                        .replace('{key}', key);\n                }\n            }\n        }\n    }\n}, {\n    strings: {\n        UNSET_PARENT_OBJECT: 'parentObject must be set',\n        INVALID_EXTRADATA_TYPE:\n            'extraData must be an object or undefined',\n        INVALID_EXTRADATA_VALUE_TYPE:\n            'extraData.{key} must be null, a number, boolean, or string'\n    }\n});\n\n\n_.extend(RB.BaseResource.prototype, RB.ExtraDataMixin);\n"],"mappings":"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"}