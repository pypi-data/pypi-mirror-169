{"version":3,"file":"repositoryCommitsCollection.js","names":["RB","RepositoryCommits","BaseCollection","extend","model","RepositoryCommit","initialize","models","options","Backbone","Collection","prototype","call","busy","complete","_nextStart","parse","response","commits","length","parent","url","params","start","undefined","branch","urlBase","$","param","canFetchNext","fetchNext","fetch","remove","success","_","isFunction","error"],"sources":["repositoryCommitsCollection.es6.js"],"sourcesContent":["/**\n * A collection of commits in a repository.\n *\n * This is expected to be used in an ephemeral manner to get a list of commits\n * from a given start point (usually corresponding to some branch in the\n * repository).\n */\nRB.RepositoryCommits = RB.BaseCollection.extend({\n    model: RB.RepositoryCommit,\n\n    /**\n     * Initialize the collection.\n     *\n     * Args:\n     *     models (Array of object):\n     *         Initial models for the collection.\n     *\n     *     options (Object):\n     *         Options for the collection.\n     *\n     * Option Args:\n     *     start (string):\n     *         The start commit for fetching commit logs.\n     *\n     *     branch (string):\n     *         The branch name for fetching commit logs.\n     *\n     *     urlBase (string):\n     *         The base URL for the API request.\n     */\n    initialize(models, options) {\n        Backbone.Collection.prototype.initialize.call(this, models, options);\n        this.options = options;\n        this.busy = false;\n        this.complete = false;\n        this._nextStart = null;\n    },\n\n    /**\n     * Parse the response.\n     *\n     * Args:\n     *     response (object):\n     *         Response, parsed from the JSON returned by the server.\n     *\n     * Returns:\n     *     Array of object:\n     *     An array of commits.\n     */\n    parse(response) {\n        const commits = response.commits;\n\n        this._nextStart = commits[commits.length - 1].parent;\n        this.complete = !this._nextStart;\n\n        return response.commits;\n    },\n\n    /**\n     * Get the URL to fetch for the next page of results.\n     *\n     * Returns:\n     *     string:\n     *     The URL to fetch.\n     */\n    url() {\n        const params = {};\n\n        if (this.options.start !== undefined) {\n            params.start = this.options.start;\n        }\n\n        if (this.options.branch !== undefined) {\n            params.branch = this.options.branch;\n        }\n\n        return this.options.urlBase + '?' + $.param(params);\n    },\n\n    /**\n     * Return whether another page of commits can be fetched.\n     *\n     * A page can only be fetched if there's at least 1 commit already\n     * fetched, the last commit in the repository has not been fetched, and\n     * another fetch operation isn't in progress.\n     *\n     * Version Added:\n     *     4.0.3\n     *\n     * Returns:\n     *     boolean:\n     *     ``true`` if another page can be fetched. ``false`` if one cannot.\n     */\n    canFetchNext() {\n        return !this.busy && !this.complete && this.models.length > 0;\n    },\n\n    /**\n     * Fetch the next page of results.\n     *\n     * This can be called multiple times. If this is called when a fetch is\n     * already in progress, it's a no-op. Otherwise, if there are more commits\n     * to load, it will fetch them and add them to the bottom of the\n     * collection.\n     *\n     * It's up to the caller to check :js:func:`canFetchNext()` before calling\n     * this if they want callbacks to fire.\n     *\n     * Version Changed:\n     *     4.0.3:\n     *     Added the ``options`` argument with ``error`` and ``success``\n     *     callbacks.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for fetching the next page of results.\n     *\n     * Option Args:\n     *     error (function):\n     *         A function to call if fetching a page fails. This must take\n     *         ``collection, xhr`` arguments.\n     *\n     *     success (function):\n     *         A function to call if fetching a page succeeds.\n     */\n    fetchNext(options={}) {\n        if (this.canFetchNext()) {\n            this.options.start = this._nextStart;\n\n            this.fetch({\n                remove: false,\n                success: () => {\n                    this.busy = false;\n\n                    if (_.isFunction(options.success)) {\n                        options.success();\n                    }\n                },\n                error: options.error,\n            });\n        }\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,iBAAH,GAAuBD,EAAE,CAACE,cAAH,CAAkBC,MAAlB,CAAyB;EAC5CC,KAAK,EAAEJ,EAAE,CAACK,gBADkC;;EAG5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,MAAD,EAASC,OAAT,EAAkB;IACxBC,QAAQ,CAACC,UAAT,CAAoBC,SAApB,CAA8BL,UAA9B,CAAyCM,IAAzC,CAA8C,IAA9C,EAAoDL,MAApD,EAA4DC,OAA5D;IACA,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKK,IAAL,GAAY,KAAZ;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,UAAL,GAAkB,IAAlB;EACH,CA7B2C;;EA+B5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,KAAK,CAACC,QAAD,EAAW;IACZ,MAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAzB;IAEA,KAAKH,UAAL,GAAkBG,OAAO,CAACA,OAAO,CAACC,MAAR,GAAiB,CAAlB,CAAP,CAA4BC,MAA9C;IACA,KAAKN,QAAL,GAAgB,CAAC,KAAKC,UAAtB;IAEA,OAAOE,QAAQ,CAACC,OAAhB;EACH,CAjD2C;;EAmD5C;AACJ;AACA;AACA;AACA;AACA;AACA;EACIG,GAAG,GAAG;IACF,MAAMC,MAAM,GAAG,EAAf;;IAEA,IAAI,KAAKd,OAAL,CAAae,KAAb,KAAuBC,SAA3B,EAAsC;MAClCF,MAAM,CAACC,KAAP,GAAe,KAAKf,OAAL,CAAae,KAA5B;IACH;;IAED,IAAI,KAAKf,OAAL,CAAaiB,MAAb,KAAwBD,SAA5B,EAAuC;MACnCF,MAAM,CAACG,MAAP,GAAgB,KAAKjB,OAAL,CAAaiB,MAA7B;IACH;;IAED,OAAO,KAAKjB,OAAL,CAAakB,OAAb,GAAuB,GAAvB,GAA6BC,CAAC,CAACC,KAAF,CAAQN,MAAR,CAApC;EACH,CAtE2C;;EAwE5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIO,YAAY,GAAG;IACX,OAAO,CAAC,KAAKhB,IAAN,IAAc,CAAC,KAAKC,QAApB,IAAgC,KAAKP,MAAL,CAAYY,MAAZ,GAAqB,CAA5D;EACH,CAxF2C;;EA0F5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,SAAS,GAAa;IAAA,IAAZtB,OAAY,uEAAJ,EAAI;;IAClB,IAAI,KAAKqB,YAAL,EAAJ,EAAyB;MACrB,KAAKrB,OAAL,CAAae,KAAb,GAAqB,KAAKR,UAA1B;MAEA,KAAKgB,KAAL,CAAW;QACPC,MAAM,EAAE,KADD;QAEPC,OAAO,EAAE,MAAM;UACX,KAAKpB,IAAL,GAAY,KAAZ;;UAEA,IAAIqB,CAAC,CAACC,UAAF,CAAa3B,OAAO,CAACyB,OAArB,CAAJ,EAAmC;YAC/BzB,OAAO,CAACyB,OAAR;UACH;QACJ,CARM;QASPG,KAAK,EAAE5B,OAAO,CAAC4B;MATR,CAAX;IAWH;EACJ;;AAtI2C,CAAzB,CAAvB"}