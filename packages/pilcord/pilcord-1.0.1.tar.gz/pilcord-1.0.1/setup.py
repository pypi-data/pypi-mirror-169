# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pilcord']

package_data = \
{'': ['*'], 'pilcord': ['assets/*']}

install_requires = \
['Pillow>=9.2.0,<10.0.0', 'aiohttp>=3.8.1,<4.0.0']

setup_kwargs = {
    'name': 'pilcord',
    'version': '1.0.1',
    'description': 'A library rich with many image generation funcitons powered by PIL for your discord bot such as leveling, welcome card and meme generation!',
    'long_description': '# pilcord\n\n[github](https://github.com/ResetXD/pilcord)\n\nstatus: `new image gen everyday!`\n\n\nA library rich with many image generation funcitons powered by PIL for your discord bot such as leveling, welcome card and meme generation!\n\n\n## ranking card preview\n\n`card1`\n\n![card1](https://cdn.discordapp.com/attachments/907213435358547968/994620579816681572/unknown.png)\n\n\n`card2`\n![card](https://cdn.discordapp.com/attachments/907213435358547968/1020968412144480316/final.png)\n\n\n`card3` *same as card2 but with background*\n![card](https://cdn.discordapp.com/attachments/1018936393659076668/1022149875544113172/rank.png)\n\n\n<br>\n\n## meme generation preview\n\n`fight_under_this_flag`\n\n![fight_under_this_flag](https://cdn.discordapp.com/attachments/1018936393659076668/1023951088677818419/flag.png)\n\n\n`uwu_discord`\n\n![image preview](https://cdn.discordapp.com/attachments/1018936393659076668/1024368352984059984/unknown.png)\n\n\n`rip`\n\n![image preview](https://cdn.discordapp.com/attachments/946821391183925331/1024637846881054770/unknown.png)\n\n\n## installation\n\n`for pypi version`\n```sh\npip install pilcord\n```\n\n`for github developement version`\n```sh\npip install git+https://github.com/ResetXD/pilcord\n```\n\n## How To Use\n\nThe method will return `bytes` which can directly be used in discord.py/disnake/pycord/nextcord \'s `File class`.\n\n\n<br>\n\n# Documentation\n\n# rank card docs \n\n<details>\n\n<summary> <span style="color:yellow">RankCard</span> class</summary>\n\n<br>\n\n`__init__` method\n\n```py\nRankCard(\n    settings: CardSettings,\n    avatar:str,\n    level:int,\n    current_exp:int,\n    max_exp:int,\n    username:str,\n    rank: Optional[int] = None\n)\n```\n\n- `settings` - Settings class from DiscordLevelingCard.\n\n- `avatar` - avatar image url.\n\n- `level` - level of the user.\n\n- `current_exp` - current exp of the user.\n\n- `max_exp` - max exp of the user.\n\n- `username` - username of the user.\n\n- `rank` - rank of the user. (optional)\n\n</details>\n\n<details>\n\n<summary> <span style="color:yellow">CardSettings</span> class</summary>\n\n<br>\n\n`__init__` method\n\n```py\nCardSettings(\n    background: Union[PathLike, BufferedIOBase, str],\n    bar_color: Optional[str] = \'white\',\n    text_color: Optional[str] = \'white\',\n    background_color: Optional[str]= "#36393f"\n\n)\n```\n\n- `background` - background image url or file-object in `rb` mode.\n  - `4:1` aspect ratio recommended.\n\n- `bar_color` - color of the bar [example: "white" or "#000000"]\n\n- `text_color` - color of the text [example: "white" or "#000000"]\n\n- `background_color` - color of the background [example: "white" or "#000000"]\n\n</details>\n\n\n<details>\n\n<summary> <span style="color:yellow">card1</span> method</summary>\n\n\n```py\nRankCard.card1()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![card1](https://cdn.discordapp.com/attachments/907213435358547968/994620579816681572/unknown.png)\n\n<br>\n\n</details>\n\n\n<details>\n\n<summary> <span style="color:yellow">card2</span> method</summary>\n\n\n```py\nRankCard.card2()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![card](https://cdn.discordapp.com/attachments/907213435358547968/1020968412144480316/final.png)\n\n<br>\n\n</details>\n\n\n<details>\n\n<summary> <span style="color:yellow">card3</span> method</summary>\n\n\n```py\nRankCard.card3()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![card](https://cdn.discordapp.com/attachments/1018936393659076668/1022149875544113172/rank.png)\n\n<br>\n\n</details>\n\n<details>\n\n<summary><span style="color:yellow">example</span></summary>\n\n`It returns bytes which can directly be used in discord.py and its fork\'s File class.`\n\n```py\n\nfrom disnake.ext import commands\nfrom DiscordLevelingCard import RankCard, CardSettings\nimport disnake\n\nclient = commands.Bot()\n# define background, bar_color, text_color at one place\ncard_settings = CardSettings(\n    background="url or path to background image",\n    text_color="white",\n    bar_color="#000000"\n)\n\n@client.slash_command(name="rank")\nasync def user_rank_card(ctx, user:disnake.Member):\n    await ctx.response.defer()\n    a = RankCard(\n        settings=card_settings,\n        avatar=user.display_avatar.url,\n        level=1,\n        current_exp=1,\n        max_exp=1,\n        username="cool username",\n        rank=1\n    )\n    image = await a.card1()\n    await ctx.edit_original_message(file=disnake.File(image, filename="rank.png")) # providing filename is very important\n\n```\n\n<br>\n\n\n</details>\n\n\n\n# rank card docs \n\n<details>\n\n\n<summary> <span style="color:yellow">Meme</span> class</summary>\n\n<br>\n\n`__init__` method\n\n```py\nMeme(\n    avatar: str\n)\n```\n\n- `avatar` - image url.\n\n</details>\n\n\n<details>\n\n<summary> <span style="color:yellow">fight_under_this_flag</span> method</summary>\n\n\n```py\nMeme.fight_under_this_flag()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![fight_under_this_flag](https://cdn.discordapp.com/attachments/1018936393659076668/1023951088677818419/flag.png)\n\n<br>\n\n</details>\n\n\n\n\n<details>\n\n<summary> <span style="color:yellow">uwu_discord</span> method</summary>\n\n\n```py\nMeme.uwu_discord()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![uwu_discord](https://cdn.discordapp.com/attachments/1018936393659076668/1024368352984059984/unknown.png)\n<br>\n\n</details>\n\n\n\n<details>\n\n<summary> <span style="color:yellow">rip</span> method</summary>\n\n\n```py\nMeme.rip()\n```\n\n`returns` - `bytes` which can directly be used within `discord.File` class.\n\n\n\n![uwu_discord](https://cdn.discordapp.com/attachments/946821391183925331/1024637846881054770/unknown.png)\n<br>\n\n</details>\n\n\n\n\n\n<details>\n\n<summary><span style="color:yellow">example</span></summary>\n\n`It returns bytes which can directly be used in discord.py and its fork\'s File class.`\n\n```py\n\nfrom disnake.ext import commands\nfrom DiscordLevelingCard import Meme\nimport disnake\n\nclient = commands.Bot()\n\n@client.slash_command(name="fight_under_this_flag")\nasync def fight_under_this_flag_meme(ctx, user:disnake.Member):\n    await ctx.response.defer()\n    a = Meme(\n        avatar=user.display_avatar.url\n    )\n    image = await a.fight_under_this_flag()\n    await ctx.edit_original_message(file=disnake.File(image, filename="fight.png")) # providing filename is very important\n\n```\n\n<br>\n\n\n</details>\n',
    'author': 'Reset',
    'author_email': 'resetwastakenwastaken@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
