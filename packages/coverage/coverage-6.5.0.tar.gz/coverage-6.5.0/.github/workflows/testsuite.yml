# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://github.com/nedbat/coveragepy/blob/master/NOTICE.txt

name: "Tests"

on:
  push:
    branches:
      - master
      - nedbat/*
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  COVERAGE_IGOR_VERBOSE: 1

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  tests:
    name: "${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        python-version:
          # When changing this list, be sure to check the [gh-actions] list in
          # tox.ini so that tox will run properly. PYVERSIONS
          # Available versions:
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json
          # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#available-versions-of-python-and-pypy
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11.0-rc.2"
          - "pypy-3.7"
          - "pypy-3.9"
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Set up Python"
        uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --require-hashes -r requirements/tox.pip
          # For extreme debugging:
          # python -c "import urllib.request as r; exec(r.urlopen('https://bit.ly/pydoctor').read())"

      - name: "Run tox for ${{ matrix.python-version }}"
        continue-on-error: true
        id: tox1
        run: |
          python -m tox -- -rfsEX

      - name: "Retry tox for ${{ matrix.python-version }}"
        id: tox2
        if: steps.tox1.outcome == 'failure'
        run: |
          python -m tox -- -rfsEX

      - name: "Set status"
        if: always()
        run: |
          if ${{ steps.tox1.outcome != 'success' && steps.tox2.outcome != 'success' }}; then
             exit 1
          fi

  # A final step to give a simple name for required status checks.
  # https://github.com/orgs/community/discussions/33579
  success:
    needs: tests
    runs-on: ubuntu-latest
    name: Tests successful
    steps:
      - name: "Success"
        run: |
          echo Tests successful
