Metadata-Version: 2.1
Name: timeplus
Version: 0.3.0
Summary: Timeplus python SDK
Home-page: https://github.com/timeplus-io/gluon/tree/develop/python
Author: Gang Tao
Author-email: gang@timeplus.io
Project-URL: Bug Tracker, https://github.com/timeplus-io/gluon/issues
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: requests (>=2.27.1)
Requires-Dist: websocket-client (>=1.3.1)
Requires-Dist: rx (>=3.2.0)
Requires-Dist: loguru (>=0.6.0)
Requires-Dist: python-dateutil

## Timeplus API Python SDK

Timeplus Python SDK

to install the sdk, run `pip install timeplus`

```python
import os

from rx import operators as ops
from timeplus import Stream, StreamColumn, Query, Env, Type

# initialize timeplus environment
api_key = os.environ.get("TIMEPLUS_API_KEY")
env = (
    Env().schema("https").host("hostname").port("443").workspace("my-workspace-id").api_key(api_key)
)
Env.setCurrent(env)

# create a stream
s = (
    Stream()
    .name("stream_name")
    .column(StreamColumn().name("field_name_a").type(Type.String))
    .column(StreamColumn().name("field_name_b").type(Type.Float))
)

s.create()

# insert data into stream
s.insert(
    [
        [
            "hello",
            100.1
        ],
        [
            "timeplus",
            20.2
        ],
    ]
)

# delete stream
s.delete()

# run query on existing stream
query = Query().sql(f"select * from stream_name")
query.create()

query.get_result_stream().pipe(ops.take(5)).subscribe(
    on_next=lambda i: print(f"get one query result {i}"),
    on_error=lambda e: print(f"error {e}"),
    on_completed=lambda: query.stop(),
)

```
