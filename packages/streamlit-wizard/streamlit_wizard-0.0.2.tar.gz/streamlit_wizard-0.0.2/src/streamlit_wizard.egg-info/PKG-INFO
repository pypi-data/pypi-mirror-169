Metadata-Version: 2.1
Name: streamlit-wizard
Version: 0.0.2
Summary: A little streamlit wizard
Author-email: Archy de Berker <archy.deberker@gmail.com>
Project-URL: Homepage, https://github.com/archydeberker/streamlit-wizard
Project-URL: Bug Tracker, https://github.com/archydeberker/streamlit-wizard/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# streamlit-wizard
This is an example of creating a wizard within Streamlit.

To use it, create your page objects by inheriting from the `Page` class in components,
and pass the resulting pages into the `Wizard` class as illustrated in `main.py`.

## Styling
Some custom CSS styling is used for the container. You can fiddle with it in `static/style.css`

## State
Streamlit session state is used to store the current page and to move data between pages. See `example_pages.py`
for an example of how you can retrieve data stored on previous pages. I've not thought this pattern through
very deeply, please let me know if there's a better way of doing it - obviously handling state in nested
components in complex, see Redux.

## Running
```
pip install -r requirements.txt
streamlit run main.py
```

# Publishing
`python3 -m build`
`python3 -m twine upload --repository testpypi dist/*

