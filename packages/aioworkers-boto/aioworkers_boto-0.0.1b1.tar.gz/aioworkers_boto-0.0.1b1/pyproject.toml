[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aioworkers-boto"
description = 'Connector and storage over boto'
readme = "README.md"
requires-python = ">=3.7"
license = "Apache-2.0"
keywords = []
authors = [
  { name = "Alexander Malev", email = "malev@somedev.ru" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "aioworkers",
  "aiobotocore",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/aioworkers/aioworkers-boto#readme"
Issues = "https://github.com/aioworkers/aioworkers-boto/issues"
Source = "https://github.com/aioworkers/aioworkers-boto"

[tool.hatch.version]
path = "aioworkers_boto/__about__.py"

[tool.hatch.build.targets.sdist]
packages = ["aioworkers_boto"]
exclude = [
  ".gitignore",
  "/.github",
  "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["aioworkers_boto"]

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-asyncio",
  "pytest-aioworkers",
  "pytest-mock",
  "mypy",
  "pyyaml",
  "isort",
  "black",
  "flake8",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=aioworkers_boto --cov=tests"
no-cov = "cov --no-cov"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "aioworkers_boto/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310"]

[tool.mypy]
ignore_missing_imports = true
