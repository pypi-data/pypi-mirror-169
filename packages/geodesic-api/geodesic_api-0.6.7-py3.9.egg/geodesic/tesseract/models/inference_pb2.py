# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inference.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import geodesic.tesseract.models.features_pb2 as features__pb2
import geodesic.tesseract.models.error_pb2 as error__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0finference.proto\x12\x08workerv1\x1a\x0e\x66\x65\x61tures.proto\x1a\x0b\x65rror.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\x01\n\x14SendAssetDataRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12+\n\x06header\x18\x03 \x01(\x0b\x32\x19.workerv1.AssetDataHeaderH\x00\x12#\n\x04\x64\x61ta\x18\x04 \x01(\x0b\x32\x13.workerv1.AssetDataH\x00\x42\x06\n\x04part\"\xcf\x01\n\x15SendAssetDataResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12+\n\x06header\x18\x03 \x01(\x0b\x32\x19.workerv1.AssetDataHeaderH\x00\x12#\n\x04\x64\x61ta\x18\x04 \x01(\x0b\x32\x13.workerv1.AssetDataH\x00\x12 \n\x05\x65rror\x18\x05 \x01(\x0b\x32\x0f.geodesic.ErrorH\x00\x12\x1e\n\x04grid\x18\x06 \x01(\x0b\x32\x0e.workerv1.GridH\x00\x42\x06\n\x04part\"A\n\x0f\x41ssetDataHeader\x12\r\n\x05shape\x18\x01 \x03(\x04\x12\r\n\x05\x64type\x18\x02 \x01(\t\x12\x10\n\x08\x66ilepath\x18\x04 \x01(\t\"g\n\tAssetData\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\"\n\x08\x66\x65\x61tures\x18\x02 \x03(\x0b\x32\x10.gogc.FeatureMsg\x12(\n\x07records\x18\x03 \x03(\x0b\x32\x17.google.protobuf.Struct\"V\n\x04Grid\x12)\n\x05times\x18\x01 \x03(\x0b\x32\x1a.google.protobuf.Timestamp\x12\r\n\x05\x62\x61nds\x18\x02 \x03(\t\x12\t\n\x01x\x18\x03 \x03(\x01\x12\t\n\x01y\x18\x04 \x03(\x01\x32l\n\x12InferenceServiceV1\x12V\n\rSendAssetData\x12\x1e.workerv1.SendAssetDataRequest\x1a\x1f.workerv1.SendAssetDataResponse\"\x00(\x01\x30\x01\x42\x31Z/github.com/seerai/tesseract/worker/v1/inferenceb\x06proto3')



_SENDASSETDATAREQUEST = DESCRIPTOR.message_types_by_name['SendAssetDataRequest']
_SENDASSETDATARESPONSE = DESCRIPTOR.message_types_by_name['SendAssetDataResponse']
_ASSETDATAHEADER = DESCRIPTOR.message_types_by_name['AssetDataHeader']
_ASSETDATA = DESCRIPTOR.message_types_by_name['AssetData']
_GRID = DESCRIPTOR.message_types_by_name['Grid']
SendAssetDataRequest = _reflection.GeneratedProtocolMessageType('SendAssetDataRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDASSETDATAREQUEST,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:workerv1.SendAssetDataRequest)
  })
_sym_db.RegisterMessage(SendAssetDataRequest)

SendAssetDataResponse = _reflection.GeneratedProtocolMessageType('SendAssetDataResponse', (_message.Message,), {
  'DESCRIPTOR' : _SENDASSETDATARESPONSE,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:workerv1.SendAssetDataResponse)
  })
_sym_db.RegisterMessage(SendAssetDataResponse)

AssetDataHeader = _reflection.GeneratedProtocolMessageType('AssetDataHeader', (_message.Message,), {
  'DESCRIPTOR' : _ASSETDATAHEADER,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:workerv1.AssetDataHeader)
  })
_sym_db.RegisterMessage(AssetDataHeader)

AssetData = _reflection.GeneratedProtocolMessageType('AssetData', (_message.Message,), {
  'DESCRIPTOR' : _ASSETDATA,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:workerv1.AssetData)
  })
_sym_db.RegisterMessage(AssetData)

Grid = _reflection.GeneratedProtocolMessageType('Grid', (_message.Message,), {
  'DESCRIPTOR' : _GRID,
  '__module__' : 'inference_pb2'
  # @@protoc_insertion_point(class_scope:workerv1.Grid)
  })
_sym_db.RegisterMessage(Grid)

_INFERENCESERVICEV1 = DESCRIPTOR.services_by_name['InferenceServiceV1']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z/github.com/seerai/tesseract/worker/v1/inference'
  _SENDASSETDATAREQUEST._serialized_start=122
  _SENDASSETDATAREQUEST._serialized_end=262
  _SENDASSETDATARESPONSE._serialized_start=265
  _SENDASSETDATARESPONSE._serialized_end=472
  _ASSETDATAHEADER._serialized_start=474
  _ASSETDATAHEADER._serialized_end=539
  _ASSETDATA._serialized_start=541
  _ASSETDATA._serialized_end=644
  _GRID._serialized_start=646
  _GRID._serialized_end=732
  _INFERENCESERVICEV1._serialized_start=734
  _INFERENCESERVICEV1._serialized_end=842
# @@protoc_insertion_point(module_scope)
