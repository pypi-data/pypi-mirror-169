{"version":3,"file":"conditionSetModel.js","names":["Djblets","Forms","ConditionSet","Backbone","Model","extend","defaults","fieldName","lastID","initialize","attributes","choices","Collection","choicesData","model","ConditionChoice","parse","conditions","conditionsData","attrs","options","choice","get","choiceID","operator","operators","operatorID","conditionID","set","Condition","id","value","valid","error","addNewCondition","first","add","data"],"sources":["conditionSetModel.es6.js"],"sourcesContent":["/**\n * A set of configured conditions, and available choices.\n *\n * This tracks all the conditions that are being configured, handling assigning\n * each one an ID and tracking their state. It also provides information on\n * each choice available for a condition.\n *\n * Attributes:\n *     choices (Backbone.Collection):\n *         A collection of possible choices for a condition. Each entry is a\n *         :js:class:`Djblets.Forms.ConditionChoice`.\n *\n *     conditions (Backbone.Collection):\n *         A collection of configured conditions. Each entry is a\n *         :js:class:`Djblets.Forms.Condition`.\n *\n * Model Attributes:\n *     fieldName (string):\n *         The name of the form field for the main conditions element.\n *\n *     lastID (number):\n *         The last condition row ID used.\n */\nDjblets.Forms.ConditionSet = Backbone.Model.extend({\n    defaults: {\n        fieldName: null,\n        lastID: null\n    },\n\n    /**\n     * Initialize the model.\n     *\n     * Args:\n     *     attributes (object):\n     *         Attribute values passed to the constructor.\n     */\n    initialize(attributes) {\n        this.choices = new Backbone.Collection(attributes.choicesData, {\n            model: Djblets.Forms.ConditionChoice,\n            parse: true\n        });\n\n        this.conditions = new Backbone.Collection(attributes.conditionsData, {\n            model: (attrs, options) => {\n                const choice = attrs.choice ||\n                               this.choices.get(attrs.choiceID);\n                const operator = attrs.operator ||\n                                 (choice\n                                  ? choice.operators.get(attrs.operatorID)\n                                  : null);\n                const lastID = this.get('lastID');\n                const conditionID = (lastID === null ? 0 : lastID + 1);\n\n                this.set('lastID', conditionID);\n\n                return new Djblets.Forms.Condition(\n                    {\n                        id: conditionID,\n                        choice: choice,\n                        operator: operator,\n                        value: attrs.value,\n                        valid: attrs.valid,\n                        error: attrs.error\n                    },\n                    options);\n            }\n        });\n    },\n\n    /**\n     * Add a new condition.\n     *\n     * This will construct a new condition with defaults and add it to the\n     * collection.\n     */\n    addNewCondition() {\n        const choice = this.choices.first();\n\n        this.conditions.add({\n            choice: choice,\n            operator: choice.operators.first()\n        });\n    },\n\n    /**\n     * Parse the attribute data passed to the model.\n     *\n     * This will extract only the ``fieldName`` attribute, leaving the rest\n     * to be specially handled by :js:func:`initialize`.\n     *\n     * Args:\n     *     data (object):\n     *         The attribute data passed to the model.\n     *\n     * Returns:\n     *     object:\n     *     The parsed attributes.\n     */\n    parse(data) {\n        return {\n            fieldName: data.fieldName\n        };\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,KAAR,CAAcC,YAAd,GAA6BC,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;EAC/CC,QAAQ,EAAE;IACNC,SAAS,EAAE,IADL;IAENC,MAAM,EAAE;EAFF,CADqC;;EAM/C;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,UAAD,EAAa;IACnB,KAAKC,OAAL,GAAe,IAAIR,QAAQ,CAACS,UAAb,CAAwBF,UAAU,CAACG,WAAnC,EAAgD;MAC3DC,KAAK,EAAEd,OAAO,CAACC,KAAR,CAAcc,eADsC;MAE3DC,KAAK,EAAE;IAFoD,CAAhD,CAAf;IAKA,KAAKC,UAAL,GAAkB,IAAId,QAAQ,CAACS,UAAb,CAAwBF,UAAU,CAACQ,cAAnC,EAAmD;MACjEJ,KAAK,EAAE,CAACK,KAAD,EAAQC,OAAR,KAAoB;QACvB,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAN,IACA,KAAKV,OAAL,CAAaW,GAAb,CAAiBH,KAAK,CAACI,QAAvB,CADf;QAEA,MAAMC,QAAQ,GAAGL,KAAK,CAACK,QAAN,KACCH,MAAM,GACJA,MAAM,CAACI,SAAP,CAAiBH,GAAjB,CAAqBH,KAAK,CAACO,UAA3B,CADI,GAEJ,IAHH,CAAjB;QAIA,MAAMlB,MAAM,GAAG,KAAKc,GAAL,CAAS,QAAT,CAAf;QACA,MAAMK,WAAW,GAAInB,MAAM,KAAK,IAAX,GAAkB,CAAlB,GAAsBA,MAAM,GAAG,CAApD;QAEA,KAAKoB,GAAL,CAAS,QAAT,EAAmBD,WAAnB;QAEA,OAAO,IAAI3B,OAAO,CAACC,KAAR,CAAc4B,SAAlB,CACH;UACIC,EAAE,EAAEH,WADR;UAEIN,MAAM,EAAEA,MAFZ;UAGIG,QAAQ,EAAEA,QAHd;UAIIO,KAAK,EAAEZ,KAAK,CAACY,KAJjB;UAKIC,KAAK,EAAEb,KAAK,CAACa,KALjB;UAMIC,KAAK,EAAEd,KAAK,CAACc;QANjB,CADG,EASHb,OATG,CAAP;MAUH;IAvBgE,CAAnD,CAAlB;EAyBH,CA5C8C;;EA8C/C;AACJ;AACA;AACA;AACA;AACA;EACIc,eAAe,GAAG;IACd,MAAMb,MAAM,GAAG,KAAKV,OAAL,CAAawB,KAAb,EAAf;IAEA,KAAKlB,UAAL,CAAgBmB,GAAhB,CAAoB;MAChBf,MAAM,EAAEA,MADQ;MAEhBG,QAAQ,EAAEH,MAAM,CAACI,SAAP,CAAiBU,KAAjB;IAFM,CAApB;EAIH,CA3D8C;;EA6D/C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACInB,KAAK,CAACqB,IAAD,EAAO;IACR,OAAO;MACH9B,SAAS,EAAE8B,IAAI,CAAC9B;IADb,CAAP;EAGH;;AA/E8C,CAAtB,CAA7B"}