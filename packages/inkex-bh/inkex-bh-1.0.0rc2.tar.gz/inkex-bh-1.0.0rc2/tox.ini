[tox]
minversion = 3.3
isolated_build = true
envlist =
  py37,py38,py39,py310
  py38-inkex101
  cover-{clean,report}
  lint

[gh-actions]
python =
    3.7: py37
    3.8: py38, py38-inkex101
    3.9: py39
    3.10: py310

[testenv]
commands =
    coverage run -m pytest {posargs:tests}
passenv = INKSCAPE_COMMAND

# NOTE: Installing inkex (due to transitive dependencies) on Ubuntu
# requires at least the following to be installed:
#
# - libcairo2-dev
# - libgirepository1.0-dev
#
deps =
    # Install inkex from git as there seem to be no recent versions
    # published to PyPI.
    !inkex101: git+https://gitlab.com/inkscape/extensions.git@EXTENSIONS_AT_INKSCAPE_1.2.1
    inkex101: inkex==1.0.1
    importlib_resources; python_version < '3.9'
    #
    pytest
    coverage[toml]
depends =
  {py37,py38,py39,py310},py38-inkex101: cover-clean
  cover-report: {py37,py38,py39,py310},py38-inkex101

[testenv:cover-clean]
deps = coverage[toml]
skip_install = true
commands = coverage erase

[testenv:cover-report]
deps = coverage[toml]
skip_install = true
commands =
    -coverage combine --append
    coverage html
    coverage report --fail-under=100

[testenv:lint]
skip_install = true
deps =
    flake8
    flake8-bugbear

    mypy
    !py37: types-lxml
    py37: lxml-stubs

commands =
    flake8
    mypy

[testenv:devenv]
# To generate a virtualenv to use for development:
#
#   tox -e devenv --devenv devenv
#
skip_install = true
deps =
    {[testenv]deps}
    {[testenv:lint]deps}
    pylint
commands =

[flake8]
exclude = .tox,devenv
max-line-length = 80
select = C,E,F,W,B,B950
extend-ignore =
    E203,              # whitespace before ':' (conflicts with black)
    E501,              # line too long (B950 is better)
    W503               # line break occurred before a binary operator (defunct)
