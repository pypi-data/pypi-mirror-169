Metadata-Version: 2.1
Name: RefactoringIdioms
Version: 0.0.6
Summary: code refactorings with Python idioms
License: MIT License
Project-URL: homepage, https://github.com/idiomaticrefactoring/pythonidiomsrefactor
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: astroid (==2.9.3)
Requires-Dist: cffi (==1.15.0)
Requires-Dist: click (==8.0.3)
Requires-Dist: cryptography (==36.0.2)
Requires-Dist: cycler (==0.11.0)
Requires-Dist: dill (==0.3.4)
Requires-Dist: flake8 (==4.0.1)
Requires-Dist: Flask (==2.0.2)
Requires-Dist: fonttools (==4.29.1)
Requires-Dist: gunicorn (==20.1.0)
Requires-Dist: guppy3 (==3.1.2)
Requires-Dist: isort (==5.10.1)
Requires-Dist: itsdangerous (==2.0.1)
Requires-Dist: Jinja2 (==3.0.3)
Requires-Dist: joblib (==1.1.0)
Requires-Dist: kiwisolver (==1.3.2)
Requires-Dist: lazy-object-proxy (==1.7.1)
Requires-Dist: MarkupSafe (==2.0.1)
Requires-Dist: matplotlib (==3.5.1)
Requires-Dist: mccabe (==0.6.1)
Requires-Dist: memory-profiler (==0.60.0)
Requires-Dist: mpmath (==1.2.1)
Requires-Dist: multiprocess (==0.70.12.2)
Requires-Dist: numpy (==1.22.2)
Requires-Dist: opt-einsum (==3.3.0)
Requires-Dist: packaging (==21.3)
Requires-Dist: pandas (==1.4.2)
Requires-Dist: pathos (==0.2.8)
Requires-Dist: Pillow (==9.0.1)
Requires-Dist: platformdirs (==2.5.0)
Requires-Dist: pox (==0.3.0)
Requires-Dist: ppft (==1.6.6.4)
Requires-Dist: psutil (==5.9.0)
Requires-Dist: pycodestyle (==2.8.0)
Requires-Dist: pycparser (==2.21)
Requires-Dist: pyflakes (==2.4.0)
Requires-Dist: pylibmc (==1.6.1)
Requires-Dist: pyparsing (==3.0.7)
Requires-Dist: pyperf (==2.3.1)
Requires-Dist: pyro-api (==0.1.2)
Requires-Dist: python-dateutil (==2.8.2)
Requires-Dist: python-dotenv (==0.19.2)
Requires-Dist: pytz (==2022.1)
Requires-Dist: PyYAML (==6.0)
Requires-Dist: resolvelib (==0.5.4)
Requires-Dist: scikit-learn (==1.0.2)
Requires-Dist: scipy (==1.8.0)
Requires-Dist: six (==1.16.0)
Requires-Dist: sklearn (==0.0)
Requires-Dist: sympy (==1.9)
Requires-Dist: threadpoolctl (==3.1.0)
Requires-Dist: toml (==0.10.2)
Requires-Dist: torch (==1.10.2)
Requires-Dist: tqdm (==4.63.0)
Requires-Dist: typing-extensions (==4.1.1)
Requires-Dist: Werkzeug (==2.0.2)
Requires-Dist: wrapt (==1.12.1)

# Refactoring non-idiomatic Python code with Python idioms


## Install:
For command line use, the package is installed with 

    python3 -m pip install RefactoringIdioms

 ## Running:
1).  Default command is to save all refactored files for all Python Idioms in the current directory in ./RefactoringIdiomsOutputdir/. And it can get <non-idiomatic code, idiomatic code> code pairs for all Python files in the current directory for all Python idioms, and save these code pairs in result.json in the current directory: 
	
     RIdiom

2).  Options: 

**--filepath "your filepath" (e.g., main.py)** is to refactor "your filepath" file. The default path is the current directory. 

**--idiom "IdiomName" (e.g., List Comprehension)** is to refactor for the specified "IdiomName". Options are List Comprehension, Set Comprehension, Dict Comprehension, Chain Comparison, Truth Value Test, Assign Multiple Targets, For Multiple Targets, For Else, Star in Call, All. The default idiom is "All" that means all idioms.

**--outputdir "your output folder" (e.g.,RefactoringIdiomsOutputdir/ )** is to save all refactored files in "your output folder". The default directory is "./RefactoringIdiomsOutputdir".

**--output_codepair "your output path" (e.g.,result.json )** is to save all code pairs in "your output folder". The default path is "result.json".

**--flag_merge_allcodepair (e.g., 1 )** means whether to store a separate file for each code pair. The values are 0 and 1. The 1 means refactor a file with all code pairs. The 0 means refactor a file with each code pair individually. The default value is 1.

For example, if you want to refactor code for a Python idiom in the given directory and save the refactored files in the given directory, you can execute the following command:

    RIdiom --filepath "your filepath" --idiom "IdiomName" --outputdir "your output folder" --output_codepair  "your output path" --flag_merge_allcodepair 1
## Web application: 
We also develop a web application for the code refactoring, you could access the application through the url: 47.242.131.128:5000
	
Each time, you could click code area to refresh.
	
