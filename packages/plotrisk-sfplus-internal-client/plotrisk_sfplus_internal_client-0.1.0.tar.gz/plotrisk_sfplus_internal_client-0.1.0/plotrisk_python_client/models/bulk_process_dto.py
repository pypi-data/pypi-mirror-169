# coding: utf-8

"""
    farm API

    farm API documentation  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BulkProcessDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'company_id': 'int',
        'has_user_seen': 'bool',
        'id': 'int',
        'job_type': 'str',
        'message': 'dict(str, object)',
        'percentage': 'int',
        'plan_type_id': 'int',
        'plan_type_name': 'str',
        'project_id': 'int',
        'status': 'str'
    }

    attribute_map = {
        'company_id': 'companyId',
        'has_user_seen': 'hasUserSeen',
        'id': 'id',
        'job_type': 'jobType',
        'message': 'message',
        'percentage': 'percentage',
        'plan_type_id': 'planTypeId',
        'plan_type_name': 'planTypeName',
        'project_id': 'projectId',
        'status': 'status'
    }

    def __init__(self, company_id=None, has_user_seen=None, id=None, job_type=None, message=None, percentage=None, plan_type_id=None, plan_type_name=None, project_id=None, status=None):  # noqa: E501
        """BulkProcessDto - a model defined in Swagger"""  # noqa: E501
        self._company_id = None
        self._has_user_seen = None
        self._id = None
        self._job_type = None
        self._message = None
        self._percentage = None
        self._plan_type_id = None
        self._plan_type_name = None
        self._project_id = None
        self._status = None
        self.discriminator = None
        if company_id is not None:
            self.company_id = company_id
        if has_user_seen is not None:
            self.has_user_seen = has_user_seen
        if id is not None:
            self.id = id
        if job_type is not None:
            self.job_type = job_type
        if message is not None:
            self.message = message
        if percentage is not None:
            self.percentage = percentage
        if plan_type_id is not None:
            self.plan_type_id = plan_type_id
        if plan_type_name is not None:
            self.plan_type_name = plan_type_name
        if project_id is not None:
            self.project_id = project_id
        if status is not None:
            self.status = status

    @property
    def company_id(self):
        """Gets the company_id of this BulkProcessDto.  # noqa: E501


        :return: The company_id of this BulkProcessDto.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this BulkProcessDto.


        :param company_id: The company_id of this BulkProcessDto.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def has_user_seen(self):
        """Gets the has_user_seen of this BulkProcessDto.  # noqa: E501


        :return: The has_user_seen of this BulkProcessDto.  # noqa: E501
        :rtype: bool
        """
        return self._has_user_seen

    @has_user_seen.setter
    def has_user_seen(self, has_user_seen):
        """Sets the has_user_seen of this BulkProcessDto.


        :param has_user_seen: The has_user_seen of this BulkProcessDto.  # noqa: E501
        :type: bool
        """

        self._has_user_seen = has_user_seen

    @property
    def id(self):
        """Gets the id of this BulkProcessDto.  # noqa: E501


        :return: The id of this BulkProcessDto.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BulkProcessDto.


        :param id: The id of this BulkProcessDto.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def job_type(self):
        """Gets the job_type of this BulkProcessDto.  # noqa: E501


        :return: The job_type of this BulkProcessDto.  # noqa: E501
        :rtype: str
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this BulkProcessDto.


        :param job_type: The job_type of this BulkProcessDto.  # noqa: E501
        :type: str
        """
        allowed_values = ["PLANNING", "DETAILING_VALIDATE_PLOTS", "DETAILING_VALIDATED_PLOTS", "VALIDATE_BY_AGENT_FARMER", "VALIDATE_BY_SELF_FARMER", "VALIDATE_BY_SELF_ASSET", "VALIDATE_BY_AGENT_ASSET", "VALIDATED_REMOVE_MULTIPLE", "VALIDATED_EXPORT_FILE_FOR_BULK_EDIT", "VALIDATED_IMPORT_FILE_FOR_BULK_EDIT", "VALIDATED_ADD_CROP_DOS", "VALIDATED_ADD_PLANS", "PLANNING_ASSET_ASSIGN", "PLANNING_FARMER_ASSIGN", "REJECTED", "APPROVED", "COMPANY_MEDIA_UPDATE", "PLAN_TYPE_UPDATE", "ASSIGN_CA_USER", "UNASSIGN_CA_USER", "VALIDATED_CLOSED_MULTIPLE"]  # noqa: E501
        if job_type not in allowed_values:
            raise ValueError(
                "Invalid value for `job_type` ({0}), must be one of {1}"  # noqa: E501
                .format(job_type, allowed_values)
            )

        self._job_type = job_type

    @property
    def message(self):
        """Gets the message of this BulkProcessDto.  # noqa: E501


        :return: The message of this BulkProcessDto.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BulkProcessDto.


        :param message: The message of this BulkProcessDto.  # noqa: E501
        :type: dict(str, object)
        """

        self._message = message

    @property
    def percentage(self):
        """Gets the percentage of this BulkProcessDto.  # noqa: E501


        :return: The percentage of this BulkProcessDto.  # noqa: E501
        :rtype: int
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this BulkProcessDto.


        :param percentage: The percentage of this BulkProcessDto.  # noqa: E501
        :type: int
        """

        self._percentage = percentage

    @property
    def plan_type_id(self):
        """Gets the plan_type_id of this BulkProcessDto.  # noqa: E501


        :return: The plan_type_id of this BulkProcessDto.  # noqa: E501
        :rtype: int
        """
        return self._plan_type_id

    @plan_type_id.setter
    def plan_type_id(self, plan_type_id):
        """Sets the plan_type_id of this BulkProcessDto.


        :param plan_type_id: The plan_type_id of this BulkProcessDto.  # noqa: E501
        :type: int
        """

        self._plan_type_id = plan_type_id

    @property
    def plan_type_name(self):
        """Gets the plan_type_name of this BulkProcessDto.  # noqa: E501


        :return: The plan_type_name of this BulkProcessDto.  # noqa: E501
        :rtype: str
        """
        return self._plan_type_name

    @plan_type_name.setter
    def plan_type_name(self, plan_type_name):
        """Sets the plan_type_name of this BulkProcessDto.


        :param plan_type_name: The plan_type_name of this BulkProcessDto.  # noqa: E501
        :type: str
        """

        self._plan_type_name = plan_type_name

    @property
    def project_id(self):
        """Gets the project_id of this BulkProcessDto.  # noqa: E501


        :return: The project_id of this BulkProcessDto.  # noqa: E501
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this BulkProcessDto.


        :param project_id: The project_id of this BulkProcessDto.  # noqa: E501
        :type: int
        """

        self._project_id = project_id

    @property
    def status(self):
        """Gets the status of this BulkProcessDto.  # noqa: E501


        :return: The status of this BulkProcessDto.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BulkProcessDto.


        :param status: The status of this BulkProcessDto.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkProcessDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkProcessDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
