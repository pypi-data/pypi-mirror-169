# coding: utf-8

"""
    farm API

    farm API documentation  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BulkUploadTaskDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'actual_closed_date': 'datetime',
        'closure_status': 'str',
        'crop_unit_id': 'int',
        'crop_unit_name': 'str',
        'croppable_area_id': 'int',
        'croppable_area_name': 'str',
        'data': 'dict(str, object)',
        'expected_end_date': 'datetime',
        'expected_start_date': 'datetime',
        'farmer_code': 'str',
        'farmer_name': 'str',
        'plan_type_id': 'int',
        'review_status': 'str',
        'task_id': 'int',
        'task_name': 'str'
    }

    attribute_map = {
        'actual_closed_date': 'actualClosedDate',
        'closure_status': 'closureStatus',
        'crop_unit_id': 'cropUnitId',
        'crop_unit_name': 'cropUnitName',
        'croppable_area_id': 'croppableAreaId',
        'croppable_area_name': 'croppableAreaName',
        'data': 'data',
        'expected_end_date': 'expectedEndDate',
        'expected_start_date': 'expectedStartDate',
        'farmer_code': 'farmerCode',
        'farmer_name': 'farmerName',
        'plan_type_id': 'planTypeId',
        'review_status': 'reviewStatus',
        'task_id': 'taskId',
        'task_name': 'taskName'
    }

    def __init__(self, actual_closed_date=None, closure_status=None, crop_unit_id=None, crop_unit_name=None, croppable_area_id=None, croppable_area_name=None, data=None, expected_end_date=None, expected_start_date=None, farmer_code=None, farmer_name=None, plan_type_id=None, review_status=None, task_id=None, task_name=None):  # noqa: E501
        """BulkUploadTaskDto - a model defined in Swagger"""  # noqa: E501
        self._actual_closed_date = None
        self._closure_status = None
        self._crop_unit_id = None
        self._crop_unit_name = None
        self._croppable_area_id = None
        self._croppable_area_name = None
        self._data = None
        self._expected_end_date = None
        self._expected_start_date = None
        self._farmer_code = None
        self._farmer_name = None
        self._plan_type_id = None
        self._review_status = None
        self._task_id = None
        self._task_name = None
        self.discriminator = None
        if actual_closed_date is not None:
            self.actual_closed_date = actual_closed_date
        if closure_status is not None:
            self.closure_status = closure_status
        if crop_unit_id is not None:
            self.crop_unit_id = crop_unit_id
        if crop_unit_name is not None:
            self.crop_unit_name = crop_unit_name
        if croppable_area_id is not None:
            self.croppable_area_id = croppable_area_id
        if croppable_area_name is not None:
            self.croppable_area_name = croppable_area_name
        if data is not None:
            self.data = data
        if expected_end_date is not None:
            self.expected_end_date = expected_end_date
        if expected_start_date is not None:
            self.expected_start_date = expected_start_date
        if farmer_code is not None:
            self.farmer_code = farmer_code
        if farmer_name is not None:
            self.farmer_name = farmer_name
        if plan_type_id is not None:
            self.plan_type_id = plan_type_id
        if review_status is not None:
            self.review_status = review_status
        if task_id is not None:
            self.task_id = task_id
        if task_name is not None:
            self.task_name = task_name

    @property
    def actual_closed_date(self):
        """Gets the actual_closed_date of this BulkUploadTaskDto.  # noqa: E501


        :return: The actual_closed_date of this BulkUploadTaskDto.  # noqa: E501
        :rtype: datetime
        """
        return self._actual_closed_date

    @actual_closed_date.setter
    def actual_closed_date(self, actual_closed_date):
        """Sets the actual_closed_date of this BulkUploadTaskDto.


        :param actual_closed_date: The actual_closed_date of this BulkUploadTaskDto.  # noqa: E501
        :type: datetime
        """

        self._actual_closed_date = actual_closed_date

    @property
    def closure_status(self):
        """Gets the closure_status of this BulkUploadTaskDto.  # noqa: E501


        :return: The closure_status of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._closure_status

    @closure_status.setter
    def closure_status(self, closure_status):
        """Sets the closure_status of this BulkUploadTaskDto.


        :param closure_status: The closure_status of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._closure_status = closure_status

    @property
    def crop_unit_id(self):
        """Gets the crop_unit_id of this BulkUploadTaskDto.  # noqa: E501


        :return: The crop_unit_id of this BulkUploadTaskDto.  # noqa: E501
        :rtype: int
        """
        return self._crop_unit_id

    @crop_unit_id.setter
    def crop_unit_id(self, crop_unit_id):
        """Sets the crop_unit_id of this BulkUploadTaskDto.


        :param crop_unit_id: The crop_unit_id of this BulkUploadTaskDto.  # noqa: E501
        :type: int
        """

        self._crop_unit_id = crop_unit_id

    @property
    def crop_unit_name(self):
        """Gets the crop_unit_name of this BulkUploadTaskDto.  # noqa: E501


        :return: The crop_unit_name of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._crop_unit_name

    @crop_unit_name.setter
    def crop_unit_name(self, crop_unit_name):
        """Sets the crop_unit_name of this BulkUploadTaskDto.


        :param crop_unit_name: The crop_unit_name of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._crop_unit_name = crop_unit_name

    @property
    def croppable_area_id(self):
        """Gets the croppable_area_id of this BulkUploadTaskDto.  # noqa: E501


        :return: The croppable_area_id of this BulkUploadTaskDto.  # noqa: E501
        :rtype: int
        """
        return self._croppable_area_id

    @croppable_area_id.setter
    def croppable_area_id(self, croppable_area_id):
        """Sets the croppable_area_id of this BulkUploadTaskDto.


        :param croppable_area_id: The croppable_area_id of this BulkUploadTaskDto.  # noqa: E501
        :type: int
        """

        self._croppable_area_id = croppable_area_id

    @property
    def croppable_area_name(self):
        """Gets the croppable_area_name of this BulkUploadTaskDto.  # noqa: E501


        :return: The croppable_area_name of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._croppable_area_name

    @croppable_area_name.setter
    def croppable_area_name(self, croppable_area_name):
        """Sets the croppable_area_name of this BulkUploadTaskDto.


        :param croppable_area_name: The croppable_area_name of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._croppable_area_name = croppable_area_name

    @property
    def data(self):
        """Gets the data of this BulkUploadTaskDto.  # noqa: E501


        :return: The data of this BulkUploadTaskDto.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this BulkUploadTaskDto.


        :param data: The data of this BulkUploadTaskDto.  # noqa: E501
        :type: dict(str, object)
        """

        self._data = data

    @property
    def expected_end_date(self):
        """Gets the expected_end_date of this BulkUploadTaskDto.  # noqa: E501


        :return: The expected_end_date of this BulkUploadTaskDto.  # noqa: E501
        :rtype: datetime
        """
        return self._expected_end_date

    @expected_end_date.setter
    def expected_end_date(self, expected_end_date):
        """Sets the expected_end_date of this BulkUploadTaskDto.


        :param expected_end_date: The expected_end_date of this BulkUploadTaskDto.  # noqa: E501
        :type: datetime
        """

        self._expected_end_date = expected_end_date

    @property
    def expected_start_date(self):
        """Gets the expected_start_date of this BulkUploadTaskDto.  # noqa: E501


        :return: The expected_start_date of this BulkUploadTaskDto.  # noqa: E501
        :rtype: datetime
        """
        return self._expected_start_date

    @expected_start_date.setter
    def expected_start_date(self, expected_start_date):
        """Sets the expected_start_date of this BulkUploadTaskDto.


        :param expected_start_date: The expected_start_date of this BulkUploadTaskDto.  # noqa: E501
        :type: datetime
        """

        self._expected_start_date = expected_start_date

    @property
    def farmer_code(self):
        """Gets the farmer_code of this BulkUploadTaskDto.  # noqa: E501


        :return: The farmer_code of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._farmer_code

    @farmer_code.setter
    def farmer_code(self, farmer_code):
        """Sets the farmer_code of this BulkUploadTaskDto.


        :param farmer_code: The farmer_code of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._farmer_code = farmer_code

    @property
    def farmer_name(self):
        """Gets the farmer_name of this BulkUploadTaskDto.  # noqa: E501


        :return: The farmer_name of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._farmer_name

    @farmer_name.setter
    def farmer_name(self, farmer_name):
        """Sets the farmer_name of this BulkUploadTaskDto.


        :param farmer_name: The farmer_name of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._farmer_name = farmer_name

    @property
    def plan_type_id(self):
        """Gets the plan_type_id of this BulkUploadTaskDto.  # noqa: E501


        :return: The plan_type_id of this BulkUploadTaskDto.  # noqa: E501
        :rtype: int
        """
        return self._plan_type_id

    @plan_type_id.setter
    def plan_type_id(self, plan_type_id):
        """Sets the plan_type_id of this BulkUploadTaskDto.


        :param plan_type_id: The plan_type_id of this BulkUploadTaskDto.  # noqa: E501
        :type: int
        """

        self._plan_type_id = plan_type_id

    @property
    def review_status(self):
        """Gets the review_status of this BulkUploadTaskDto.  # noqa: E501


        :return: The review_status of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._review_status

    @review_status.setter
    def review_status(self, review_status):
        """Sets the review_status of this BulkUploadTaskDto.


        :param review_status: The review_status of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._review_status = review_status

    @property
    def task_id(self):
        """Gets the task_id of this BulkUploadTaskDto.  # noqa: E501


        :return: The task_id of this BulkUploadTaskDto.  # noqa: E501
        :rtype: int
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this BulkUploadTaskDto.


        :param task_id: The task_id of this BulkUploadTaskDto.  # noqa: E501
        :type: int
        """

        self._task_id = task_id

    @property
    def task_name(self):
        """Gets the task_name of this BulkUploadTaskDto.  # noqa: E501


        :return: The task_name of this BulkUploadTaskDto.  # noqa: E501
        :rtype: str
        """
        return self._task_name

    @task_name.setter
    def task_name(self, task_name):
        """Sets the task_name of this BulkUploadTaskDto.


        :param task_name: The task_name of this BulkUploadTaskDto.  # noqa: E501
        :type: str
        """

        self._task_name = task_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkUploadTaskDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkUploadTaskDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
