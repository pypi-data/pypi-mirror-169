Metadata-Version: 2.1
Name: image-processing-exercise
Version: 0.0.1
Summary: Test 1 version - Image processing. This project belongs to Karina Tiemi Kato, Tech Lead, Machine Learning Engineer, Data Scientist Specialist at Take. This package is a demo for simulation of upload on the Test Pypi website, and it's from one of the classes from Tech Generation Unimed - BH - Data Science Bootcamp. E-mail:karinatkato@gmail.com
Home-page: https://github.com/tiagotff/DIO/tree/main/Ciencia_de_Dados_Unimed_BH/Modulo_2%20_Python_para_Cientistas_de_Dados/desafios/projeto_criacao_pacotes_processamento_imagens/image-processing-package
Author: Tiago de Freitas Faustino
Author-email: t.faustino91@gmail.com
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: scikit-image (>=0.16.1)

# Projeto: CriaÃ§Ã£o de pacote de Processamento de Imagens

DescriÃ§Ã£o: O pacote image_processing-test1 Ã© usado para:
>
	Processing:
		- CorrespondÃªncia de histograma
		- SemelhanÃ§a estrutural
		- Redimensionar imagem
	Utils:
		- Ler imagem
		- Salvar imagem
		- Plotar imagem
		- Resultado da plotagem
		- Plotar histograma
## Overview (template)
Este Ã© um overview do que faremos:

![image](https://user-images.githubusercontent.com/53586684/192152925-fc3e9713-f07a-4bf9-befb-828fd46e7c0d.png)

Fonte: Karina Kato - Machine Learning Engineer/Machine Learning Tech Lead - Take

## Passo a passo
### 1. Criar um projeto
VocÃª pode realizar um fork deste projeto para utilizÃ¡-lo como modelo. Ele jÃ¡ segue a organizaÃ§Ã£o da imagem apresentada acima.

### 2. Editar os arquivos "setup.py", "requirements.txt" e "README.md"
ApÃ³s criado o projeto e editado os arquivos "setup.py", "requirements.txt" e "README.md" Ã© necessÃ¡rio gerar as distribuiÃ§Ãµes "wheel" e "sdist".
Para isso, vocÃª deve:

### 3. Acessar a raiz do seu projeto
Acesse a raiz do seu projeto para aplicar os prÃ³ximos passos.

### 4. Aplicar os comandos de instalaÃ§Ã£o
No seu terminal, aplique os seguintes comandos:

``` bash
python -m pip install --upgrade pip
```
``` bash
python -m pip install --user twine
```
``` bash
python -m pip install --user setuptools
```
``` bash
pip install wheel
````

### 5. Aplicar o comando para criar a distribuiÃ§Ã£o
Crie a distribuiÃ§Ã£o, aplicando o seguinte comando:

``` bash
python setup.py sdist bdist_wheel
```
### 6. Publicar pacote
Realizada as etapas anteriores com Ãªxito, o prÃ³ximo passo Ã© a publicaÃ§Ã£o do pacote.
VocÃª precisa ter uma conta no Test Pypi e no Pypi para realizar essa etapa. A seguir os links:

https://test.pypi.org/account/register/

https://pypi.org/account/register/

### Test Pypi
#### 6.1. Primeiro, publique no Teste Pypi, aplicando o seguinte comando:
``` bash
python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
```
#### 6.2. Agora, instale o pacote de teste:
```bash
pip install -i https://test.pypi.org/simple/ image-processing-test1
```

### Pypi
#### 6.3. Com tudo testado, Ã© hora de publicar o pacote no Pypi:
```bash
python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
```
#### 6.4. Instale o pacote publicado:
Utilize o gerenciador de pacotes [pip](https://pip.pypa.io/en/stable/) para instalar image_processing-test1

```bash
pip install image-processing-test1
```

## Autor

Projeto original: by Karina Kato

Este exercÃ­cio: by Tiago de Freitas Faustino

Este projeto tem o objetivo apenas de exercitar a criaÃ§Ã£o publicaÃ§Ã£o e utilizaÃ§Ã£o de pacotes.
Para este fim, como ainda nÃ£o tenho um projeto prÃ³prio, foram realizados apenas pequenos 
ajustes no projeto original de Karina Kato.

## LicenÃ§a
[MIT](https://choosealicense.com/licenses/mit/)
