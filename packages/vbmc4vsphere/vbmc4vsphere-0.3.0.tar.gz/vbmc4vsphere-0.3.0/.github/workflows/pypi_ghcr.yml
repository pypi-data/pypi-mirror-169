name: TestPyPI, PyPI, and GitHub Container Registry

on: push

jobs:
  pypi:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/ .

      - name: Publish a Python distribution to Test PyPI
        if: startsWith(github.ref, 'refs/tags') != true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish a Python distribution to Production PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  ghcr:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-22.04
    needs: pypi

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Get version from tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker/.
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/vbmc4vsphere:${{ steps.vars.outputs.tag }}
