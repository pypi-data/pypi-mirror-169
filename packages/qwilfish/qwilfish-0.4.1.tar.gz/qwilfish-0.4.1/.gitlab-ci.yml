###############################################################################
###################################################################### DEFAULTS
###############################################################################

stages:
  - testing
  - building
  - deploying
  - releasing

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG =~ /v\d+\.\d+\.\d+/

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - echo "CI_PIPELINE_SOURCE = $CI_PIPELINE_SOURCE"
  - echo "CI_COMMIT_BRANCH = $CI_COMMIT_BRANCH"
  - echo "CI_COMMIT_TAG = $CI_COMMIT_TAG"
  - python -V  # Print out python version for debugging
  - python -m venv venv
  - source venv/bin/activate

###############################################################################
##################################################################### TEMPLATES
###############################################################################

.test:  &test_template
  stage: testing
  script:
    - pip install tox
    - tox

.deploy: &deploy_template
  stage: deploying
  image: python:3.10
  variables:
    REPOSITORY: "--repository-url https://test.pypi.org/legacy/"
    TWINE_USERNAME: $TESTPYPI_USERNAME
    TWINE_PASSWORD: $TESTPYPI_PASSWORD
  script:
    - pip install twine
    - twine upload $REPOSITORY dist/*
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: always

.release_rules: &release_rules
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG =~ /v\d+\.\d+\.\d+/

###############################################################################
####################################################################### TESTING
###############################################################################

test:py38:
  <<: *test_template
  image: python:3.10

###############################################################################
###################################################################### BUILDING
###############################################################################

build_and_run:
  stage: building
  image: python:3.10
  script:
    - pip install build
    - python -m build
    - pip install dist/*.whl
    - qwilfish
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - dist/
    expire_in: 1 hour

###############################################################################
##################################################################### DEPLOYING
###############################################################################

deploy:TestPyPI:
  <<: *deploy_template

deploy:PyPI:
  <<: *deploy_template
  variables:
    REPOSITORY: ""
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  <<: *release_rules

###############################################################################
##################################################################### RELEASING
###############################################################################

release:GitLab:
  stage: releasing
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - echo "CI_PIPELINE_SOURCE = $CI_PIPELINE_SOURCE"
    - echo "CI_COMMIT_BRANCH = $CI_COMMIT_BRANCH"
    - echo "CI_COMMIT_TAG = $CI_COMMIT_TAG"
  script:
    - echo "Creating a release in GitLab"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: './CHANGELOG.md'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'PyPI'
          url: 'https://pypi.org/project/qwilfish/'
  <<: *release_rules
