!function(t,i){"function"==typeof define&&define.amd?define(["exports"],i):"undefined"!=typeof exports?i(exports):(i(i={}),t.modNotifications=i)}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:this,function(t){"use strict";function a(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}Object.defineProperty(t,"__esModule",{value:!0}),t.notifications=void 0;var i,r=MyAMS.$;r.templates||(i=require("jsrender"),r.templates=i.templates);var s=r.templates({markup:'\n\t<li class="p-1 my-1{{if status}} alert-{{:status}}{{/if}}">\n\t\t<a class="d-flex flex-row"{{if url}} href="{{:url}}"{{/if}}>\n\t\t\t{{if source.avatar}}\n\t\t\t<img class="avatar mx-1 mt-1" src="{{:source.avatar}}"\n\t\t\t\t alt="{{:source.title}}" title="{{:source.title}}" />\n\t\t\t{{else}}\n\t\t\t<i class="avatar fa fa-fw fa-2x fa-user mx-1 mt-1"\n\t\t\t   title="{{:source.title}}"></i>\n\t\t\t{{/if}}\n\t\t\t<div class="flex-grow-1 ml-2">\n\t\t\t\t<small class="timestamp float-right text-muted">\n\t\t\t\t\t{{*: new Date(data.timestamp).toLocaleString()}}\n\t\t\t\t</small>\n\t\t\t\t<strong class="title d-block">\n\t\t\t\t\t{{:title}}\n\t\t\t\t</strong>\n\t\t\t\t<p class="text-muted mb-2">{{:message}}</p>\n\t\t\t</div>\n\t\t</a>\n\t</li>',allowCode:!0}),o=r.templates({markup:'\n\t<ul class="list-style-none flex-grow-1 overflow-auto m-0 p-0">\n\t\t{{for notifications tmpl=~itemTemplate /}}\n\t</ul>\n\t{{if !~options.hideTimestamp}}\n\t<div class="timestamp border-top pt-1">\n\t\t<span>{{*: MyAMS.i18n.LAST_UPDATE }}{{: ~timestamp.toLocaleString() }}</span>\n\t\t<i class="fa fa-fw fa-sync float-right"\n\t\t   data-ams-click-handler="MyAMS.notifications.getNotifications"\n\t\t   data-ams-click-handler-options=\'{"localTimestamp": "{{: ~useLocalTime }}"}\'></i>\n\t</div>\n\t{{/if}}',allowCode:!0}),c=function(){function e(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};!function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}(this,e),this.values=t,this.options=i}var t,i,n;return t=e,(i=[{key:"render",value:function(t){r(t).html(o.render(this.values,{itemTemplate:s,timestamp:this.options.localTimestamp?new Date:new Date(this.values.timestamp),useLocalTime:this.options.localTimestamp?"true":"false",options:this.options}))}}])&&a(t.prototype,i),n&&a(t,n),e}(),l={checkPermission:function(){return new Promise(function(i,t){"Notification"in window?"denied"!==Notification.permission?"default"===Notification.permission?!function(){try{Notification.requestPermission().then()}catch(t){return!1}return!0}()?Notification.requestPermission(function(t){i("granted"===t)}):Notification.requestPermission().then(function(t){i("granted"===t)}):i(!0):i(!1):(console.debug("Notifications are not supported by this browser!"),i(!1))})},checkUserPermission:function(){MyAMS.notifications.checkPermission().then(function(){})},getNotifications:function(t,i){var n=r.extend({},i,t.data),a=r(t.target),o=r(t.currentTarget),s=o.data("ams-notifications-source")||o.parents("[data-ams-notifications-source]").data("ams-notifications-source");return new Promise(function(e,t){MyAMS.require("ajax").then(function(){MyAMS.ajax.get(s,o.data("ams-notifications-params")||"",o.data("ams-notifications-options")||{}).then(function(t){var i=r(a.data("ams-notifications-target")||a.parents("[data-ams-notifications-target]").data("ams-notifications-target")||o.attr("href"));new c(t,n).render(i),r("#notifications-count").text(""),l.checkUserPermission(),e()},t)},t)})},addNotification:function(t,i){var e=r("ul","#notifications-pane"),n=r(s.render(t)),a=r("#notifications-count"),o=parseInt(a.text())||0;e.prepend(n),a.text(o+1),i&&l.showDesktopNotification(t)},showDesktopNotification:function(i){l.checkPermission().then(function(t){t&&(t={title:i.title,body:i.message,icon:i.source.avatar},t=new Notification(t.title,t),i.url&&(t.onclick=function(){window.open(i.url)}))})}};t.notifications=l,MyAMS.env.bundle?MyAMS.config.modules.push("notifications"):(MyAMS.notifications=l,console.debug("MyAMS: notifications module loaded..."))});