"""
    Copyright 2016 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import ip
import net

implementation aliasImpl for ip::Alias:
    """
        This module implements the configuration for network interfaces on rhel
    """
    service = std::Service(host=iface.host, name="network", state="running", onboot=true)
    iface_file = std::ConfigFile(host=iface.host, path="/etc/sysconfig/network-scripts/ifcfg-{{ iface.name }}",
                                 content=std::template("redhat/interface.tmpl"), reload=true, provides=service)
    self.requires = [iface_file]
end

implementation ifaceImpl for net::Interface:
    route_iface = std::ConfigFile(host = host, path = "/etc/sysconfig/network-scripts/route-{{ name }}",
        content = std::template("redhat/route.tmpl"))
end

implementation config for std::HostConfig:
    """
        This is the configuration each redhat based operating system should have
    """
    network_file = std::ConfigFile(host=host, path="/etc/sysconfig/network", content=std::template("redhat/network.tmpl"))
    std::Service(host=host, name="network", onboot=true, state="running", requires=[network_file])

    hostname_file = std::ConfigFile(host = host, path = "/etc/hostname", content = "{{ host.name }}")
end

implement ip::Alias using aliasImpl when std::familyof(iface.host.os, "redhat")
implement std::HostConfig using config when std::familyof(host.os, "redhat")
implement net::Interface using ifaceImpl when std::familyof(host.os, "redhat")

